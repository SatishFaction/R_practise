2+2
x<- seq(-20,20,by=.1)
x
print(satish)
princomp('satish')
x<-10
print(x)
y<-10
print(x+y)
z<-x+y
print(z)
y=c(1:100)
y
#C. Generating regular sequences - The seq() function
seq(1,20,3)
#A. sum()
sum(y)
#B. mean(), median(), sd(), var()
mean(y)
median(y)
sd(y)
var(y)
#C. max(), min()
max(x)
x <- c(12,34,24,45,7,18)
max(x)
min(y)
#D. quantile()
quantile(y,0.5)
#D. quantile()
quantile(y,0.5,0.75)
#D. quantile()
quantile(y,c(0.5,0.75))
a=c(900,80,1,5,72,200)
#F. summary
summary(a)
length(a)
a>200
x > 20
a==1
(x>30 | x<10)
x
x <- c(33,45,23,67,54,48)
x
y <- c(108,151,164,119,135,122)
y
#Write a R code to find the folowing solutions
# a. Vaues of x that are less than 35
sum(x<35)
x <- c(33,45,23,67,54,48)
sum(x<35)
#Write a R code to find the folowing solutions
# a. Vaues of x that are less than 35
length(which(x<35))
length(which(y>150))
tabulate(x)
# c. The number of observations in y that are between 120 and 165
length(which(y>120&y<=165))
#R practise from Statistical Learning Book
#Creating a vector in R
x=c(1,2,3,4,5,40)
x
y=c(21,18,17,1,13,1)
length(y)
length(x)
z=x+y
z
ls()
rm(a)
ls()
#The Matrix function
M=matrix(x,nrow = 3,ncol = 3)
M
#The Matrix function
M=matrix(x,nrow = 2,ncol = 2)
M
N-matrix(y,3,2,byrow = TRUE)
N=matrix(y,3,2,byrow = TRUE)
N
#The sqrt function
sqrt(x)
sqrt(100)
#square root of matrix
ssqrt(M)
#square root of matrix
sqrt(M)
#square root of matrix
sqrt(N)
#the power operator
x^2
rnorm(20)
rnorm(20)
n=rnorm(20)
p=n+rnorm(50,mean = 50,sd = .1)
n=rnorm(50)
p=n+rnorm(50,mean = 50,sd = .1)
cor(n,p)
set.seed(123)
n=rnorm(50)
n
n=rnorm(50)
n
a=matrix(1,2,3,4)
a
?matrix
a=matrix(c(2,4,6,8))
a
a=matrix(c(2,4,6,8),byrow=T)
a
a=matrix(c(2,4,6,8),byrow=F)
a
a=matrix(c(2,4,6,8),byrow=T)
a
a=matrix(c(2,4,6,8),nrow = 2,ncol = 2,byrow=T)
a
a=matrix(c(2,4,6,8),nrow = 2,ncol = 2)
a
a=matrix(c("a","b","c","d"),nrow = 2,ncol = 2)
a
[1:5]
[1:5]
#Let x takes the value -5
x <- -5
if (x > 0)
print('success')
else
print('failure')
if(x > 0)
{
print("success")
}
Graphs <- function(data)
{
for(i in 1:ncol(data))
{
png(paste(names(data)[i], ".png", sep="")) #NOTE this step
par(mfrow=c(2,1))
boxplot(data[,i], main = paste("Boxplot of", names(data)[i]),
ylab = names(data)[i], col = "maroon", border = "grey5",
horizontal = T)
hist(data[,i], main = paste("Histogram of", names(data)[i]),
xlab = names(data)[i], ylab = "No. of Houses", col = "lightgreen", border=F)
dev.off()  #NOTE this step
}
}
Graphs(mtcars)
hello <- function()
{
print("Hello World")
}
hello()
View(hello)
install.packages("arules")
install.packages("plyr")
install.packages("dplyr")
install.packages("readxl")
library(arules)
library(plyr)
library(dplyr)
library(readxl)
getwd()
setwd("C:\\Users\\ASUS\\Desktop\\R_Practise")
reatil=read_excel("Online Retail")
reatil=read_excel("Online Retail.xlsx")
View(retail)
View(reatil)
reatil$InvoiceDate=as.Date(reatil$InvoiceDate)
names(reatil)
tran_data=ddply(reatil,c("InvoiceNo","InvoiceNo"),
function(df)paste(df$Description,collapse = ","))
view(head(tran_data))
View(head(tran_data))
tran_data$InvoiceNo<-NULL
View(head(tran_data))
colnames(tran_data)=c("Items")
View(head(tran_data))
?write.csv()
write.csv(tran_data,"Basket.csv",row.names = F)
transactions=read.transactions("Basket.csv",format = 'basket',sep = ',')
summary(transactions)
rules<-apriori(transactions.parameter=list(support=0.001,conf=1))
summary(rules)
inspect(rules)
rules<-apriori(transactions.parameter=list(support=0.001,conf=1))
rules<-apriori(transactions,parameter=list(support=0.001,conf=1))
summary(rules)
inspect(rules)
